

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Executability Conditions
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Cannot move to a location if you are already there...
-occurs(move(R, L), I) :- holds(loc(R, L), I).

%% Cannot pick up an object if you are not in the same room...
-occurs(pickup(R, O), I) :- holds(loc(R, L1), I), holds(loc(O, L2), I), L1 != L2.
-occurs(pickup(R, O), I) :- holds(loc(R, L), I), -holds(loc(O, L), I).
-occurs(pickup(R, O), I) :- holds(loc(O, L), I), -holds(loc(R, L), I).

%% Cannot pick up an object if it already has that object (or another one) in hand.
-occurs(pickup(R, O2), I) :- holds(in_hand(R, O1), I).

%% Cannot put down an object unless it is in hand...
-occurs(putdown(R, O), I) :-  not holds(in_hand(R, O), I).

%% Cannot serve an object that is not in hand...
-occurs(serve(R, O, P), I) :- not holds(in_hand(R, O), I).

%% Cannot serve an object unless robot and human are in same location...
-occurs(serve(R, O, P), I) :- holds(loc(R, L1), I), holds(loc(P, L2), I), L1 != L2.

%% Rules to prevent incorrect serving...
-occurs(serve(R, O, P), I) :- holds(loc(R, L), I), -holds(loc(P, L), I).
-occurs(serve(R, O, P), I) :- holds(loc(P, L), I), -holds(loc(R, L), I).

%% Cannot label an item if it is not in same location.
-occurs(affix_label(R,X), I) :- holds(loc(R, L1), I), holds(loc(X, L2), I), L1 != L2.
-occurs(affix_label(R,X), I) :- holds(loc(R, L), I), -holds(loc(X, L), I).
-occurs(affix_label(R,X), I) :- holds(loc(X, L), I), -holds(loc(R, L), I).


%% Rules to be discovered...
-occurs(serve(R, O, P), I) :- role_type(P, engineer), 
			      loc_type(L, workshop), 
			      holds(loc(P, L), I).
-occurs(serve(R, O, P), I) :- holds(item_status(O, damaged), I).
-occurs(pickup(R, O), I) :- obj_weight(O, heavy).



